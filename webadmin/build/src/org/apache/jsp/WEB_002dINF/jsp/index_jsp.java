/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2022-06-14 08:52:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/jsp/common/taglibs.jsp", Long.valueOf(1655196723389L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n\n\n\n\n\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\n<!doctype html>\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n        <meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\">\n        \n        <title>Mirth Connect Administrator</title>\n        \n        <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"images/favicon.ico\" />\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap.css\" />\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\" />\n        \n        <script type=\"text/javascript\">\n            /* Break out of frame if inside a frame. */\n            if (window != window.top) {\n                window.top.location = window.location;\n            }\n        </script>\n        \n        <script type=\"text/javascript\" src=\"js/jquery-1.8.0.js\"></script>\n        <script type=\"text/javascript\" src=\"js/bootstrap.min.js\"></script>\n    </head>\n    \n    <body id=\"body\" style=\"display: none;\" class=\"subpage\" ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write(">\n        <div id=\"centerWrapper\" class=\"container\">\n            <div class=\"row\">\n                <div id=\"mirthLogoWrapper\">\n                    <img id=\"mirthLogo\" src=\"images/mirthconnectlogowide.png\" />\n                </div>\n    \n                <div id=\"mcadministrator\" class=\"col-xs-6 col-xs-6-custom\">\n                    <h1 style=\"text-align: center;\">Mirth Connect Administrator</h1>\n    \t\t\t\t\n    \t\t\t\t<div id=\"overviewwebstart\">\n\t    \t\t\t\t<div class=\"help-block\">\n\t                        <strong>Overview of Web Start:</strong><br /> Java Web Start is a framework developed by Sun Microsystems that enables launching Java applications directly from a browser. Unlike Java applets, Web Start applications do not run inside the browser.\n\t                    </div>\n\t                    <div class=\"help-block\">\n\t                        <br />Click the big green button below to launch the Mirth Connect Administrator using Java Web Start.\n\t                    </div>\n    \t\t\t\t</div>\n\n                    <div style=\"text-align: center;\">\n");
      out.write("                        <a class=\"btn btn-md btn-themebutton\" href=\"javascript:launchAdministrator()\">Launch Mirth Connect Administrator</a>\n                        <div id=\"optionsDropdownContainer\" class=\"dropdown\">\n                        \t<button id=\"optionsButton\" class=\"btn btn-default btn-lg dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\">\n\t                        \t<span class=\"glyphicon glyphicon-cog\"></span>\n                        \t</button>\n                        \t<ul id=\"optionsDropdownMenu\" class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"optionsButton\">\n                        \t\t<li role=\"presentation\"><span class=\"text-center\">Web Start Settings<span></li>\n                        \t\t<li class=\"divider\"></li>\n                        \t\t<li role=\"presentation\">\n                        \t\t\t<span id=\"maxHeapSizeLabel\" class=\"pull-left\">Max Heap Size:&nbsp;</span>\n                        \t\t\t<select id=\"maxHeapSizeSelect\"></select>\n                        \t\t\t<p id=\"maxHeapSizeWarning\"><b>Note:</b> The Administrator may fail to start if the max heap size is set too high.</p>\n");
      out.write("                        \t\t</li>\n                        \t</ul>\n                        </div>\n                    </div>\n                </div>\n    \n                <div id=\"webdashboardsignin\" class=\"col-xs-6 col-xs-6-custom\">\n                    <h1 id=\"webDashboardHeader\" style=\"text-align: center;\">Web Dashboard Sign in</h1>\n    \t\t\t\t    \t\t\t\t\n    \t\t\t\t");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\n                </div>\n            </div>\n        </div>\n        <div id=\"smallSubPage\">\n        \t<p>&copy; 2016 Mirth Corporation | Mirth Connect</p>\n        </div>\n    \n        <script type=\"text/javascript\">\n            $(document).ready(\n                    function detectMobile() {\n                        /**\n                         * jQuery.browser.mobile (http://detectmobilebrowser.com/)\n                         * jQuery.browser.mobile will be true if the browser is a mobile device\n                         **/\n                        (function(a) {\n                            jQuery.browser.mobile = /android.+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|e\\-|e\\/|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(di|rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|xda(\\-|2|g)|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))\n");
      out.write("                        })(navigator.userAgent || navigator.vendor || window.opera);\n\n                        if (jQuery.browser.mobile) {\n                            $(\"#mcadministrator\").hide();\n\n                            $(\"#centerWrapper\").css(\"margin\", \"0\");\n                            $(\"#centerWrapper\").css(\"padding\", \"0\");\n                            $(\"#centerWrapper\").css(\"border\", \"none\");\n                            $(\"#centerWrapper\").css(\"width\", \"100%\");\n\n                            $(\"#webdashboardsignin\").css(\"border-left\", \"0\");\n                            $(\"#webdashboardsignin\").css(\"margin-left\", \"0\");\n                            $(\"#webdashboardsignin\").css(\"padding-left\", \"0\");\n                            $(\"#webdashboardsignin\").css(\"width\", \"100%\");\n\n                            $(\"#username\").css(\"width\", \"100%\");\n                            $(\"#password\").css(\"width\", \"100%\");\n\n                            $(\"#securesiteaccess\").css(\"margin-left\", \"30px\");\n    \n                            // Set viewport meta tag\n");
      out.write("                            var mt = $('meta[name=viewport]');\n            \t\t\t\tmt = mt.length ? mt : $('<meta name=\"viewport\" />').appendTo('head');\n            \t\t\t\tmt.attr('content', 'initial-scale=.8,maximum-scale=.8,user-scalable=no,width=device-width');\n                        } else {\n                            $(\"#mcadministrator\").show();\n                        }\n                        $(\"#body\").css(\"display\", \"inline\");\n                    });\n        </script>\n        <script type=\"text/javascript\">\n            var showAlert = false;\n            $(document).ready(function() {\n            \t// Get the default max heap size and options from the context\n                var defaultMaxHeapSize = convertHeapSizeString('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${actionBean.context.maxHeapSize}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("', 512);\n                var maxHeapSizeOptions = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${actionBean.context.maxHeapSizeOptions}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n                var options = [];\n                \n                // Set the options if they were specified in the context\n                if (maxHeapSizeOptions) {\n                \tvar optionsStringArray = maxHeapSizeOptions.split(',');\n                \t\n                \tfor (var i = 0; i < optionsStringArray.length; i++) {\n                \t\tvar heapSize = convertHeapSizeString(optionsStringArray[i]);\n                \t\tif (heapSize) {\n                \t\t\toptions.push(heapSize);\n                \t\t}\n                \t}\n                }\n                \n                // If no options were specified or they were invalid, set the defaults\n                if (options.length == 0) {\n\t                options = [256,512,1024,2048];\n                }\n                \n                // Determine if the default is contained in the options array\n                var found = false;\n                for (var i = 0; i < options.length; i++) {\n                \tif (options[i].toString() == defaultMaxHeapSize) {\n                \t\tfound = true;\n");
      out.write("                \t}\n                }\n                \n                // If not, put it in the array\n                if (!found) {\n                \toptions.push(defaultMaxHeapSize);\n                }\n                \n                // Sort the options array\n                options.sort(function(a,b) {return a-b});\n                \n                // Build the options HTML for the select input\n                var selectHtml = '';\n                for (var i = 0; i < options.length; i++) {\n                \tvar num = options[i];\n                \tvar selected = (num.toString() == defaultMaxHeapSize);\n                \tvar letter = 'm';\n                \t\n                \tif (num % 1024 == 0) {\n                \t\tnum /= 1024;\n                \t\tletter = 'g';\n                \t}\n                \tselectHtml += '<option value=\"' + num + letter + '\"' + (selected ? ' selected' : '') + '>' + num + ' ' + letter.toUpperCase() + 'B</option>';\n                }\n                \n                // Set the options\n                $('#maxHeapSizeSelect').html(selectHtml);\n");
      out.write("                \n                // This prevents closing the Bootstrap dropdown when clicking on the select input \n                $('#optionsDropdownMenu').click(function(e) {\n                \te.stopPropagation();\n                });\n                \n                $.urlParam = function(name) {\n                    var results = new RegExp('[\\\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n                    if (results != null) {\n                        return results[1] || 0;\n                    }\n                }\n                showAlert = $.urlParam('showAlert');\n\n                if (showAlert) {\n                    $(\"#loginErrorAlert\").removeClass('hide');\n                    return false;\n                } else {\n                    $(\"#loginErrorAlert\").addClass('hide');\n                    return true;\n                }\n            });\n            \n            function convertHeapSizeString(str, defaultSize) {\n            \tstr = new String(str);\n            \tdefaultSize = new Number(defaultSize) || 0;\n");
      out.write("                var heapSize = new Number(str.replace(/[^\\d]/g,'')) || defaultSize;\n                \n                var heapSizeLetter = str.replace(/[^mg]/ig,'');\n                if (!/[mg]/i.test(heapSizeLetter)) {\n                \theapSizeLetter = 'm';\n\t\t\t\t}\n\t\t\t\tif (heapSizeLetter.toLowerCase() == 'g') {\n\t\t\t\t\theapSize *= 1024;\n\t\t\t\t}\n\n\t\t\t\treturn heapSize;\n\t\t\t}\n\t\t</script>\n\t\t<script type=\"text/javascript\">\n\t\t\tfunction launchAdministrator() {\n\t\t\t\t//window.location.href = 'http://' + window.location.hostname + ':");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${actionBean.context.httpPort}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${actionBean.context.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webstart.jnlp?time=' + new Date().getTime() + '&maxHeapSize=' + $('#maxHeapSizeSelect').val();\n\t\t\t\twindow.location.href = 'https://' + window.location.hostname + '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${actionBean.context.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webstart.jnlp?time=' + new Date().getTime() + '&maxHeapSize=' + $('#maxHeapSizeSelect').val();\n\t\t\t}\n\t\t</script>\n\t</body>\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f0.setParent(null);
    // /WEB-INF/jsp/common/taglibs.jsp(7,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setVar("contextPath");
    // /WEB-INF/jsp/common/taglibs.jsp(7,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/common/taglibs.jsp(7,0) '${pageContext.request.contextPath}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
    if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /WEB-INF/jsp/index.jsp(25,59) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${actionBean.secureHttps == true}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("onload=\"document.loginform.username.focus();\"");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fchoose_005f0.setParent(null);
    int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
    if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\n    \t\t\t\t \t");
        if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
          return true;
        out.write("\n\t\t              \t");
        if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
          return true;
        out.write("\n                    ");
        int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    // /WEB-INF/jsp/index.jsp(67,10) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${actionBean.secureHttps == true}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
    if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\n\t\t                     <form id=\"webLoginForm\" name=\"loginform\" action=\"Login.action\" method=\"post\">\n\t\t                        <div id=\"loginErrorAlert\" class=\"alert alert-danger hide fade in\" data-alert=\"alert\">\n\t\t\t                    \t<p>Invalid login credentials</p>\n\t\t\t                    </div>\n\t\t\t                    <div id=\"webLoginWrapper\">\n\t\t\t    \t\t\t\t\t<div id=\"webLogin\">\n\t\t\t                            <input type=\"hidden\" name=\"op\" value=\"login\" /> <input type=\"hidden\" name=\"version\" value=\"0.0.0\" /> <label for=\"username\">Username</label>\n\t\t\t                            <input id=\"username\" type=\"text\" name=\"username\" autocomplete=\"off\" maxlength=\"32\" /> <label for=\"password\">Password</label>\n\t\t\t                            <input id=\"password\" type=\"password\" name=\"password\" autocomplete=\"off\" />\n\t\t\t                            <div id=\"webLoginSecurityReminder\" class=\"help-block\">\n\t\t\t                                <strong>Security Reminder:</strong><br /> Sign out of your account when you finish your session.\n");
        out.write("\t\t\t                            </div>\n\t\t\t\t                    </div>\n\t\t\t                    </div>\n\t\t\t                    <div id=\"webLoginButton\">\n\t\t\t\t                \t<input class=\"btn btn-md btn-themebutton\" type=\"submit\" value=\"Sign in\"/>\n\t\t\t\t                </div>\n\t\t\t\t        \t</form>\n\t\t            \t");
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
    if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\n\t\t              \t\t<div id=\"securesiteaccess\">\n\t\t              \t\t\t<p>The Mirth Connect Web Dashboard must be accessed over HTTPS. Click below button to switch to the secure site.</p>\n\t\t                   \t\t<div class=\"help-block\">\n\t\t                \t        <br/><strong>Note:</strong><br/> You may see a certificate error if your server is using a <a href=\"http://en.wikipedia.org/wiki/Self-signed_certificate\" target=\"_blank\">self-signed certificate</a>. To prevent further warnings, you can add this certificate to your browser or operating system.\n\t\t                        </div>\n\t\t\t                </div>\n\t\t                    <div id=\"accessSecureSiteButton\" style=\"text-align: center;\">\n\t\t                    \t<a class=\"btn btn-md btn-themebutton\" href=\"SecureAccess.action\">Access Secure Site</a>\n\t\t                    </div> \n  \t\t\t\t\t\t");
        int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
    return false;
  }
}
