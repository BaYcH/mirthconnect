# Donkey configuration file
# options: derby, mysql, postgres, oracle, sqlserver
database=postgres
# examples:
#	Derby		jdbc:derby:${dir.base}/mirthdb;create=true
#	PostgreSQL	jdbc:postgresql://localhost:5432/mirthdb
# 	MySQL		jdbc:mysql://localhost:3306/mirthdb
#	Oracle		jdbc:oracle:thin:@localhost:1521:DB
#	SQLServer	jdbc:jtds:sqlserver://localhost:1433/mirthdb
database.url=jdbc:postgresql://localhost:5432/donkeytest
# if using a custom driver, specify it here
#database.driver = 
# database credentials
database.username=postgres
database.password=postgres
database.max-connections=10
#kafka消费者
mq.kafka.consumer.bootstrap.servers=192.168.236.109:9092,192.168.236.110:9092,192.168.236.111:9092
mq.kafka.consumer.group.id=jd-group
mq.kafka.consumer.enable.auto.commit=false
mq.kafka.consumer.max.poll.records=10
mq.kafka.consumer.auto.offset.reset=latest
mq.kafka.consumer.session.timeout.ms=30000
mq.kafka.consumer.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mq.kafka.consumer.value.deserializerorg.apache.kafka.common.serialization.StringDeserializer
#kafka生产者
mq.kafka.producer.bootstrap.servers=192.168.236.109:9092,192.168.236.110:9092,192.168.236.111:9092
mq.kafka.producer.acks=all
mq.kafka.producer.retries=0
mq.kafka.producer.batch.size=16384
mq.kafka.producer.linger.ms=10
mq.kafka.producer.buffer.memory=33554432
mq.kafka.producer.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mq.kafka.producer.value.serializer=org.apache.kafka.common.serialization.StringSerializer
